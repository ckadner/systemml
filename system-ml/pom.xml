<?xml version="1.0" encoding="UTF-8"?>
<!--
 * (C) Copyright IBM Corp. 2010, 2015
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *     
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>system-ml</artifactId>
	<name>SystemML compiler</name>

	<parent>
		<groupId>com.ibm.systemml</groupId>
		<artifactId>systemml-parent</artifactId>
		<version>0.9.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<build>
		<plugins>
		
		<plugin>  
		   <groupId>org.codehaus.mojo</groupId>  
		   <artifactId>exec-maven-plugin</artifactId>  
		   <version>1.1.1</version>  
		   <executions>  
		    <execution>  
		     <phase>pre-integration-test</phase>  
		     <goals>  
		      <goal>java</goal>  
		     </goals>  
		     <configuration>  
		      <mainClass>com.ibm.bi.dml.utils.InstallDependencyForIntegrationTests</mainClass>	
				<arguments>  
       				<argument>${skipTests}</argument>
       			</arguments>
		     </configuration>  
		    </execution>  
		   </executions>  
		  </plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.hadoop</groupId>
									<artifactId>hadoop-test</artifactId>
									<version>1.2.1</version>
									<!-- <classifier>jar</classifier> -->
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/hadoop-test</outputDirectory>
									<includes>**/*</includes>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		
			<!-- PLEASE DO NOT REMOVE! NEEDED to "PACKAGE" ANTLR RUNTIME INTO SYSTEMML.JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- Include signature files so that recent versions of Java will run 
						the resulting jar without complaining about "Invalid signature file digest 
						for Manifest main attributes". -->
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>
			
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<!--  Test suite classes kept in a separate folder for compatibility
								 	  with the Eclipse JUnit test runner. -->
								<source>${basedir}/src/test_suites/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
						<id>create-package-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<skipAssembly>true</skipAssembly>
						</configuration>
					</execution>
					<execution>
						<id>create-source-distribution-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/source.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>create-cluster-binary-distribution-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/distrib.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>create-standalone-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/standalone.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>create-inmemory-jar</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/inmemory.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<archive>
						<index>true</index>
						<!-- <manifest> -->
						<!-- <addClasspath>true</addClasspath> -->
						<!-- </manifest> -->
						<manifestEntries>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
							<Main-Class>com.ibm.bi.dml.api.DMLScript</Main-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${basedir}/src/test/config/hadoop_bin_windows/bin</directory>
									<filtering>false</filtering>
									<includes>
										<include>*.*</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${basedir}/target/lib/hadoop/bin</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<configuration>
					<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
					<outputDirectory>${basedir}/src/main/java</outputDirectory>
				</configuration>
				<version>4.3</version>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Currently, all tests are integration tests. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					
					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Run (num cores) test harness classes in parallel, each in a separate 
						process -->
					<forkCount>1C</forkCount>
					<reuseForks>true</reuseForks>

					<!-- Third argument prevents Java from popping up lots of windows on 
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m -Djava.awt.headless=true</argLine>

					<includes>
						<!--  All tests are integration tests as far as Maven is concerned. -->
					</includes>

					<excludes>
						<exclude>**/slowtest/**</exclude>
						<exclude>**/integration/**</exclude>
					</excludes>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>

				<!-- *** HACK ALERT *** HACK ALERT *** HACK ALERT *** -->
				<!-- Failsafe 2.18 has a bug in computing # cores, so use 2.17 -->
				<version>2.17</version><!--$NO-MVN-MAN-VER$-->
				<!-- *** END HACK *** -->

				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
							
					<!-- STDERR/STDOUT to individual .txt files instead of console -->
					<redirectTestOutputToFile>true</redirectTestOutputToFile>

					<!-- Tests are grouped into suites, one suite per package. -->
					<parallel>suites</parallel>
					<threadCount>1</threadCount>

					<!-- 2 processes per test -->
					<forkCount>0.5C</forkCount>
					<reuseForks>false</reuseForks>

					<!-- Last argument prevents Java from popping up lots of windows on 
						MacOS -->
					<argLine>-Dfile.encoding=UTF-8 -Xmx2g -Xms2g -Xmn200m
						${integrationTestExtraJVMArgs}
						-Djava.awt.headless=true</argLine>

					<includes>
						<include>**/integration/**/*Suite.java</include>
						
						<include>**/integration/functions/binary/matrix_full_other/*Test.java</include>
						<include>**/integration/functions/binary/matrix_full_cellwise/*Test.java</include>
						<include>**/integration/functions/unary/matrix/*Test.java</include>
					</includes>

					<excludes>
						<exclude>**/integration/functions/binary/matrix_full_other/*Suite.java</exclude>
						<exclude>**/integration/functions/binary/matrix_full_cellwise/*Suite.java</exclude>
						<exclude>**/integration/functions/unary/matrix/*Suite.java</exclude>
						<exclude>**/slowtest/**</exclude>
					</excludes>

				</configuration>
			</plugin>

		<!-- Prevent m2e warnings about the use of maven-remote-resources-plugin 
		in the Maven archetype that we currently use for this project. -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-remote-resources-plugin</artifactId>
									<versionRange>[1.0,)</versionRange>
									<goals>
										<goal>process</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore>
									</ignore>
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>

		</plugins>

	</build>


	<profiles>
	<!-- Profile for Windows builds. Not currently needed, but might be needed 
		in the future. -->
		<profile>
			<id>platform-windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<!-- Extra JVM args for Windows go here.-->
				<integrationTestExtraJVMArgs />
			</properties>
		</profile>
	</profiles>


	<dependencies>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>1.4.0</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.10</artifactId>
			<version>1.4.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- To support dataframe in mlcontext -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.10</artifactId>
			<version>1.3.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Adding Gauva version 14.0.1 to workaround conflict between spark and hadoop dependency -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>3.2.3</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-app</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-jobclient</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>1.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.wink</groupId>
			<artifactId>wink-json4j</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>4.3</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>antlr-runtime</artifactId>
					<groupId>org.antlr</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.3</version>
		</dependency>

		<!-- Libraries for yarn integration -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-api</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-common</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-client</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>2.4.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<properties>
		<!-- OS-specific JVM arguments for running integration tests -->
		<integrationTestExtraJVMArgs />
	</properties>

</project>
